name: Test
on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch: {}
permissions: {}
jobs:
  required:
    name: "Required Checks: Test"
    if: ${{ always() }}
    needs:
      - actionlint
      - biome
      - changed-files
      - commitizen
      - editorconfig
      - ghalint
      - mypy
      - ruff
      - triggering-actor
      - yamllint
      - zizmor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Determine status
        id: status
        run: |
          results=$(tr -d '\n' <<< '${{ toJSON(needs.*.result) }}')
          if ! grep -q -v -E '(failure|cancelled)' <<< "$results"; then
            result="failed"
          else
            result="success"
          fi
          {
            echo "result=${result}"
            echo "results=${results}"
          } | tee -a "$GITHUB_OUTPUT"
      - name: Check for failed status
        if: ${{ always() && steps.status.outputs.result != 'success' }}
        run: |
          echo "One or more required build workflows failed: ${{ steps.status.outputs.results }}"
          exit 1
  triggering-actor:
    name: Validate triggering actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Fail if the triggering actor is a bot
        if: ${{ github.event_name == 'pull_request' &&
          endsWith(github.triggering_actor, '[bot]') &&
          contains(github.event.pull_request.labels.*.name, 'dependencies') &&
          contains(github.event.pull_request.labels.*.name, 'github_actions') }}
        run: exit 1
  changed-files:
    name: Get changed files
    needs: triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      # reference: https://github.com/tj-actions/changed-files#outputs-
      biome: ${{ steps.changed-files.outputs.biome_any_modified == 'true' }}
      python: ${{ steps.changed-files.outputs.python_any_modified == 'true' }}
      workflows: ${{ steps.changed-files.outputs.workflows_any_modified == 'true' }}
      yamllint: ${{ steps.changed-files.outputs.yamllint_any_modified == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 50 # Assume PRs are less than 50 commits
          persist-credentials: false
      - name: Get relevant files changed per group
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_yaml: |
            common: &common
              - .github/workflows/test.yml
            dependencies: &dependencies
              - .python-version
              - pyproject.toml
              - uv.lock
            python:
              - *common
              - *dependencies
              - "**.py"
            biome:
              - *common
              - "**.{cjs,cts,js,json,jsonc,jsx,mjs,mts,ts,tsx}"
              - biome.json
              - package-lock.json
              - package.json
            workflows:
              - ".github/workflows/*.{yaml,yml}"
            yamllint:
              - *common
              - "**.{yaml,yml}"
  actionlint:
    name: actionlint
    if: ${{ needs.changed-files.outputs.workflows == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: reviewdog/action-actionlint@a5524e1c19e62881d79c1f1b9b6f09f16356e281 # v1.65.2
        with:
          fail_level: warning
          filter_mode: nofilter
          reporter: github-pr-annotations
  biome:
    name: Biome
    if: ${{ needs.changed-files.outputs.biome == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Biome
        uses: biomejs/setup-biome@f382a98e582959e6aaac8e5f8b17b31749018780 # v2.5.0
      - name: Run Biome
        run: biome ci
  commitizen:
    name: Commitizen
    if: ${{ github.event_name == 'pull_request' }}
    needs: triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 50 # Assume PRs are less than 50 commits
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
      - name: Set up Python
        run: uv python install
      - name: Validate all commits from PR
        run: >-
          uvx --from commitizen
          cz check --rev-range ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
  editorconfig:
    name: EditorConfig
    needs: triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: editorconfig-checker/action-editorconfig-checker@0ab3427a3f09b17c21d489172245be511e0a16ea # v2.0.0
      - run: editorconfig-checker
  ghalint:
    name: ghalint
    if: ${{ needs.changed-files.outputs.workflows == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up ghalint
        env:
          GHALINT_VERSION: v1.3.0
          GH_TOKEN: ${{ github.token }}
        run: |
          TMPDIR=$(mktemp -d)
          gh release download "$GHALINT_VERSION" -R suzuki-shunsuke/ghalint -p "ghalint_*_linux_amd64.tar.gz" -O "$TMPDIR/ghalint.tar.gz"
          gh attestation verify "$TMPDIR/ghalint.tar.gz" -R suzuki-shunsuke/ghalint --signer-workflow suzuki-shunsuke/go-release-workflow/.github/workflows/release.yaml
          tar -C /usr/local/bin -xzf "$TMPDIR/ghalint.tar.gz"
      - name: Run ghalint
        run: ghalint run
  mypy:
    name: mypy
    if: ${{ needs.changed-files.outputs.python == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync
      - name: Run mypy
        run: uv run -m mypy .
  ruff:
    name: Ruff
    if: ${{ needs.changed-files.outputs.python == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/ruff-action@84f83ecf9e1e15d26b7984c7ec9cf73d39ffc946 # v3.3.1
      - run: ruff check --fix
      - run: ruff format --check
  yamllint:
    name: yamllint
    if: ${{ needs.changed-files.outputs.yamllint == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: reviewdog/action-yamllint@f01d8a48fd8d89f89895499fca2cff09f9e9e8c0 # v1.21.0
        with:
          fail_level: error
          filter_mode: nofilter
          reporter: github-pr-annotations
  zizmor:
    name: zizmor
    if: ${{ needs.changed-files.outputs.workflows == 'true' }}
    needs:
      - changed-files
      - triggering-actor
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
        with:
          enable-cache: false
      - name: Run zizmor
        env:
          GH_TOKEN: ${{ github.token }}
        run: uvx zizmor@1.7.0 -p --format=github --min-severity=low .github/workflows
