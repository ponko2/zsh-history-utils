name: Test
on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch: {}
permissions: {}
jobs:
  required:
    name: "Required Checks: Test"
    if: always()
    needs:
      - biome
      - commitizen
      - editorconfig
      - mypy
      - ruff
      - yamllint
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Determine status
        id: status
        run: |
          results=$(tr -d '\n' <<< '${{ toJSON(needs.*.result) }}')
          if ! grep -q -v -E '(failure|cancelled)' <<< "$results"; then
            result="failed"
          else
            result="success"
          fi
          {
            echo "result=${result}"
            echo "results=${results}"
          } | tee -a "$GITHUB_OUTPUT"
      - name: Check for failed status
        if: always() && steps.status.outputs.result != 'success'
        run: |
          echo "One or more required build workflows failed: ${{ steps.status.outputs.results }}"
          exit 1
  biome:
    name: Biome
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Biome
        uses: biomejs/setup-biome@f382a98e582959e6aaac8e5f8b17b31749018780 # v2.5.0
      - name: Run Biome
        run: biome ci
  commitizen:
    name: Commitizen
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Set up Python
        run: uv python install
      - name: Validate all commits from PR
        run: >-
          uvx --from commitizen
          cz check --rev-range ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
  editorconfig:
    name: EditorConfig
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: editorconfig-checker/action-editorconfig-checker@0ab3427a3f09b17c21d489172245be511e0a16ea # v2.0.0
      - run: editorconfig-checker
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync
      - name: Run mypy
        run: uv run -m mypy .
  ruff:
    name: Ruff
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/ruff-action@9828f49eb4cadf267b40eaa330295c412c68c1f9 # v3.2.2
      - run: ruff check --fix
      - run: ruff format --check
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: reviewdog/action-yamllint@f01d8a48fd8d89f89895499fca2cff09f9e9e8c0 # v1.21.0
        with:
          fail_level: error
          filter_mode: nofilter
          reporter: github-pr-annotations
